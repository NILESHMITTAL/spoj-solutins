#include <iostream>
#include<string.h>
using namespace std;
int L[6101][6101];
int lcs( char *X, char *Y, int m, int n )
{
   
   int i, j;
  
   /* Following steps build L[m+1][n+1] in bottom up fashion. Note 
      that L[i][j] contains length of LCS of X[0..i-1] and Y[0..j-1] */
   for (i=0; i<=m; i++)
   {
     for (j=0; j<=n; j++)
     {
       if (i == 0 || j == 0)
         L[i][j] = 0;
  
       else if (X[i-1] == Y[j-1])
         L[i][j] = L[i-1][j-1] + 1;
  
       else
         L[i][j] = max(L[i-1][j], L[i][j-1]);
     }
   }
    
   /* L[m][n] contains length of LCS for X[0..n-1] and Y[0..m-1] */
   return L[m][n];
}

int main() {ios_base::sync_with_stdio(false);
	// your code goes here
	int t,i;
	char s[6101],s1[6101];
	cin>>t;
	while(t--)
	{
		cin>>s;
		int m=strlen(s);
		int n=m;
		for(i=0;i<m;i++)
		{s1[n-i-1]=s[i];
		}
		
		cout<<m-lcs(s,s1,m,n)<<endl;
		
	}
	return 0;
}
